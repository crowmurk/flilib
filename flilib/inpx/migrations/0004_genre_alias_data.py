# Generated by Django 2.1 on 2018-08-15 17:50

from django.db import migrations

ALIASES = {
    'adv_modern': 'adventure',
    'adv_story': 'adventure',
    'aphorisms': '',
    'architecture_book': '',
    'art_criticism': '',
    'art_world_culture': '',
    'astrology': '',
    'auto_business': '',
    'auto_regulations': '',
    'banking': '',
    'child_classical': 'children',
    'child_folklore': 'children',
    'child_tale': 'children',
    'child_tale_rus': 'children',
    'cine': '',
    'comedy': '',
    'comics': '',
    'det_su': 'detective',
    'drama': '',
    'drama_antique': '',
    'economics': 'science',
    'economics_ref': 'reference',
    'epic': '',
    'epistolary_fiction': '',
    'equ_history': '',
    'fairy_fantasy': 'sf_fantasy',
    'family': '',
    'fanfiction': '',
    'fantasy_alt_hist': 'sf_history',
    'folk_songs': '',
    'folk_tale': '',
    'folklore': '',
    'foreign_antique': 'antique',
    'foreign_children': 'children',
    'foreign_prose': '',
    'geo_guides': '',
    'gothic_novel': '',
    'great_story': '',
    'home_collecting': 'home',
    'hronoopera': '',
    'humor_satire': 'humor',
    'limerick': '',
    'literature_18': '',
    'literature_19': '',
    'literature_20': '',
    'love': '',
    'love_hard': '',
    'love_sf': '',
    'lyrics': '',
    'military_history': '',
    'military_special': '',
    'military_weapon': '',
    'modern_tale': '',
    'music': '',
    'network_literature': '',
    'nonf_military': '',
    'notes': '',
    'org_behavior': '',
    'other': '',
    'painting': '',
    'palindromes': '',
    'periodic': '',
    'poem': 'poetry',
    'poetry_classical': 'poetry',
    'poetry_east': 'poetry',
    'poetry_for_classical': 'poetry',
    'poetry_for_modern': 'poetry',
    'poetry_modern': 'poetry',
    'poetry_rus_classical': 'poetry',
    'poetry_rus_modern': 'poetry',
    'popadancy': '',
    'popular_business': '',
    'prose': '',
    'prose_abs': '',
    'prose_game': '',
    'prose_magic': '',
    'prose_military': '',
    'prose_neformatny': '',
    'proverbs': '',
    'religion_budda': 'religion',
    'religion_catholicism': 'religion',
    'religion_christianity': 'religion',
    'religion_hinduism': 'religion',
    'religion_islam': 'religion',
    'religion_judaism': 'religion',
    'religion_orthodoxy': 'religion',
    'religion_paganism': 'religion',
    'religion_protestantism': 'religion',
    'russian_fantasy': 'sf_fantasy',
    'sci_botany': 'science',
    'sci_build': 'science',
    'sci_cosmos': 'science',
    'sci_ecology': 'science',
    'sci_economy': 'science',
    'sci_geo': 'science',
    'sci_medicine_alternative': '',
    'sci_metal': 'science',
    'sci_oriental': 'science',
    'sci_pedagogy': 'science',
    'sci_philology': 'science',
    'sci_popular': 'science',
    'sci_radio': 'science',
    'sci_social_studies': 'science',
    'sci_state': 'science',
    'sci_textbook': 'science',
    'sci_theories': 'science',
    'sci_transport': 'science',
    'sci_veterinary': 'science',
    'sci_zoo': 'science',
    'screenplays': '',
    'sf_etc': '',
    'sf_fantasy_city': 'sf_fantasy',
    'sf_litrpg': '',
    'sf_mystic': '',
    'sf_postapocalyptic': '',
    'sf_stimpank': '',
    'sf_technofantasy': '',
    'sf_writing': '',
    'song_poetry': '',
    'story': '',
    'tale_chivalry': '',
    'tbg_computers': '',
    'tbg_higher': '',
    'tbg_school': '',
    'tbg_secondary': '',
    'theatre': 'dramaturgy',
    'thriller_mystery': '',
    'tragedy': '',
    'travel_notes': '',
    'unfinished': '',
    'vaudeville': '',
    'Биографии и мемуары': 'nonf_biography',
    'Шпионский Детектив': 'det_espionage',
}

def add_startup_data(apps, schema_editor):
    Genre = apps.get_model('library', 'Genre')
    GenreAlias = apps.get_model('inpx', 'GenreAlias')
    for code, genre in ALIASES.items():
        if genre:
            GenreAlias.objects.create(
                code=code,
                genre=Genre.objects.get(code=genre),
            )

def remove_startup_data(apps, schema_editor):
    GenreAlias = apps.get_model('inpx', 'GenreAlias')
    for code, genre in ALIASES.items():
        if genre:
            genre_alias_object = GenreAlias.objects.get(code=code)
            genre_alias_object.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('inpx', '0003_language_alias_data'),
        ('library', '0003_genre_data'),
    ]

    operations = [
        migrations.RunPython(
            add_startup_data,
            remove_startup_data)
    ]
