# Generated by Django 4.0.3 on 2022-05-06 07:39

import time
import datetime

from django.db import migrations


def getStatistic(apps):
    start = time.time()

    Author = apps.get_model('library', 'Author')
    Genre = apps.get_model('library', 'Genre')
    Language = apps.get_model('library', 'Language')
    Series = apps.get_model('library', 'Series')
    Book = apps.get_model('library', 'Book')

    statistic = {
        'authors_database': Author.objects.all().count(),
        'authors_library': Author.objects.with_library_books_count().filter(books_count__gt=0).count(),

        'genres_database': Genre.objects.with_books_count().filter(books_count__gt=0).count(),
        'genres_library': Genre.objects.with_library_books_count().filter(books_count__gt=0).count(),

        'languages_database': Language.objects.with_books_count().filter(books_count__gt=0).count(),
        'languages_library': Language.objects.with_library_books_count().filter(books_count__gt=0).count(),

        'series_database': Series.objects.all().count(),
        'series_library': Series.objects.with_library_books_count().filter(books_count__gt=0).count(),

        'books_database': Book.objects.all().count(),
        'books_library': Book.objects.filter(deleted=False).count(),
    }

    time_spent = round(time.time() - start, 2)

    statistic['time_spent'] = datetime.timedelta(seconds=time_spent)

    return statistic


def add_startup_data(apps, schema_editor):
    Statistic = apps.get_model('inpx', 'Statistic')
    Statistic.objects.create(
        **getStatistic(apps)
    )

def remove_startup_data(apps, schema_editor):
    Statistic = apps.get_model('inpx', 'Statistic')
    Statistic.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('library', '0004_alter_managers'),
        ('inpx', '0005_statistic'),
    ]

    operations = [
        migrations.RunPython(
            add_startup_data,
            remove_startup_data)
    ]
